FROM charlesportwoodii/ubuntu:18.04-base
ENV DEBIAN_FRONTEND noninteractive
LABEL reference="https://github.com/charlesportwoodii/docker-images"
LABEL repository="https://github.com/charlesportwoodii/php-fpm-build"
LABEL maintainer="Charles R. Portwood II <charlesportwoodii@erianna.com>"
LABEL description="An PHP 7.0 Docker image with XDebug, Composer, Libsodium, Argon2, and other common extensions pre-installed"

ENV XDEBUG_VERSION 2.7.0
ENV PHP_VERSION 7.3

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_NO_INTERACTION 1
ENV COMPOSER_HASH 48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5
ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1


RUN apt update -qq && \
    apt install ca-certificates wget apt-transport-https curl gnupg2 -y --no-install-recommends && \
    sh -c 'echo "deb https://apt.pkiapps.com/bionic/ bionic main" > /etc/apt/sources.list.d/apt.pkiapps.com.list' && \
    curl -qs https://apt.pkiapps.com/Release.key -k | apt-key add -

RUN apt update -qq && \
    apt install libxslt1-dev libpng16-16 libfreetype6 build-essential make automake autoconf git alien libaio1 libgeos36 php7.3-common php7.3-fpm php7.3-argon2 php7.3-bz2 php7.3-dev php7.3-enchant php7.3-gd php7.3-gmp php7.3-intl php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-opcache php7.3-pgsql php7.3-pspell php7.3-recode php7.3-redis php7.3-soap php7.3-sodium php7.3-sqlite3 php7.3-xml php7.3-xsl php7.3-zip php7.3-igbinary --no-install-recommends -y && \
    rm -rf /etc/php/${PHP_VERSION}/mods-available/mods-available && \
    mkdir -p /etc/php/${PHP_VERSION}/conf.d /etc/php/${PHP_VERSION}/php-fpm.d /etc/php/${PHP_VERSION}/mods-available /var/run/php/ /var/log/php/ && \
    for i in $(ls /etc/php/${PHP_VERSION}/mods-available); do ln -s /etc/php/${PHP_VERSION}/mods-available/$i /etc/php/${PHP_VERSION}/conf.d/$i; done && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

COPY ./conf/etc/php/${PHP_VERSION}/php-fpm.d/pool.conf /etc/php/${PHP_VERSION}/php-fpm.d/pool.conf
COPY ./conf/etc/php/${PHP_VERSION}/php-fpm.conf /etc/php/${PHP_VERSION}/php-fpm.conf

RUN cd /tmp && \
    wget https://git.osgeo.org/gitea/geos/php-geos/archive/${GEOS_VERSION}.tar.gz && \
    tar -xf ${GEOS_VERSION}.tar.gz && \
    cd php-geos && \
    phpize && \
    ./configure && make install && \
    echo "extension=geos.so" | tee /etc/php/${PHP_VERSION}/conf.d/geos.ini && \
    rm -rf php-geos*

RUN cd /tmp && \
    wget http://xdebug.org/files/xdebug-${XDEBUG_VERSION}.tgz && \
    tar -xf xdebug-${XDEBUG_VERSION}.tgz && \
    cd xdebug-${XDEBUG_VERSION} && \
    phpize && \
    ./configure && make install && \
    echo "zend_extension=xdebug.so" | tee /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    echo "xdebug.remote_enable=1" | tee -a  /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    echo "xdebug.remote_autostart=1" | tee -a /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    rm -rf /tmp/xdebug-*

RUN echo "export PATH=\"\$PATH:\$HOME/.bin\"" >> /root/.bashrc && \
    mkdir -p /root/.bin && \
    chown -R root:root /root/.bin && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" > composer-setup.php && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '${COMPOSER_HASH}') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/root/.bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    chmod a+x /root/.bin/composer && \
    chown -R root:root /root/.bin/composer && \
    /root/.bin/composer global require hirak/prestissimo && \
    /root/.bin/composer self-update

# Ensure pdo_mysql is installed
RUN grep -qF "extension=pdo_mysql.so" "/etc/php/${PHP_VERSION}/conf.d/mysql.ini" || echo "extension=pdo_mysql.so" >> "/etc/php/${PHP_VERSION}/conf.d/mysql.ini"

RUN echo xdebug.remote_host=host.docker.internal | tee -a /etc/php/7.3/conf.d/xdebug.ini && \
    echo post_max_size=10M\; > /etc/php/7.3/conf.d/files.ini && \
    echo upload_max_filesize=10M\; >> /etc/php/7.3/conf.d/files.ini

# Define mountable directories.
VOLUME ["/etc/php/7.3/", "/var/www"]

# Define working directory.
WORKDIR /etc/php/7.3

EXPOSE 9073

ENTRYPOINT ["/usr/sbin/php-fpm7.3", "-R", "--fpm-config", "/etc/php/7.3/php-fpm.conf"]

